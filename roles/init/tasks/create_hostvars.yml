- set_fact:
    bind_interface: "{{ Debian_bind_interface }}"
  when: "ansible_os_family == 'Debian'"

- set_fact:
    bind_interface: "{{ RedHat_bind_interface }}"
  when: "ansible_os_family == 'RedHat'"

- block:
    - name: Generating host vars files
      lineinfile:
        path: "host_vars/{{ inventory_hostname }}.yml"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        create: yes
      with_items:
        - regexp: "^bind_address"
          line: "bind_address: {{ hostvars[inventory_hostname]['ansible_' + bind_interface]['ipv4']['address'] }}"
        - regexp: "^bind_network"
          line: "bind_network: {{ hostvars[inventory_hostname]['ansible_' + bind_interface]['ipv4']['network'] }}"
      delegate_to: localhost
      become: no
  rescue:
    - name: Restart NetworkManager service
      service:
        name: NetworkManager
        state: restarted
        enabled: yes
      when: "ansible_os_family == 'RedHat'"
    - name: Restart networking service
      service:
        name: networking
        state: restarted
        enabled: yes
      when: "ansible_os_family == 'Debian'"
    - pause:
        seconds: 30
    - include_tasks: create_hostvars.yml

- set_fact:
    bind_address: "{{ hostvars[inventory_hostname]['ansible_' + bind_interface]['ipv4']['address'] }}"
    bind_network: "{{ hostvars[inventory_hostname]['ansible_' + bind_interface]['ipv4']['network'] }}"
