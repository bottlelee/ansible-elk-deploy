- hosts: all
  become: yes
  gather_facts: no
  vars:
    check_groups: true
  pre_tasks:
    - include_role:
        name: init
        tasks_from: check_python.yml
    - setup:
  roles:
    - init
    - deploy.Consul
    - deploy.Chrony
  post_tasks:
    - block:
        - name: waiting for service consul started
          wait_for:
            host: "{{ hostvars[inventory_hostname]['ansible_' + bond_interface]['ipv4']['address'] }}"
            port: 8600
            timeout: 30
      rescue:
        - service:
            name: consul
            state: restarted
        - wait_for:
            host: "{{ hostvars[inventory_hostname]['ansible_' + bond_interface]['ipv4']['address'] }}"
            port: 8600
            timeout: 30

- hosts: elasticsearch
  become: yes
  serial: 1
  roles:
    - deploy.ElasticSearch
  post_tasks:
    - block:
        - name: waiting for service started
          wait_for:
            host: "{{ hostvars[inventory_hostname]['ansible_' + bond_interface]['ipv4']['address'] }}"
            port: '{{ elastic_http_port }}'
            timeout: 60
      rescue:
        - service:
            name: elasticsearch
            state: restarted
        - wait_for:
            host: "{{ hostvars[inventory_hostname]['ansible_' + bond_interface]['ipv4']['address'] }}"
            port: '{{ elastic_http_port }}'
            timeout: 120

- hosts: kibana
  become: yes
  serial:
    - 1
    - 30%
  roles:
    - deploy.Kibana
    - deploy.ElasticSearch
    - deploy.Curator
  post_tasks:
    - block:
        - name: waiting for service started
          wait_for:
            port: '{{ kibana_port }}'
            timeout: 120
      rescue:
        - service:
            name: kibana
            state: restarted
            enabled: yes
        - wait_for:
            port: '{{ kibana_port }}'
            timeout: 120

- hosts: redis
  become: yes
  serial:
    - 1
  roles:
    - deploy.Redis

- hosts: logstash
  become: yes
  serial:
    - 1
    - 30%
  roles:
    - deploy.Logstash
  post_tasks:
    - block:
        - name: waiting for service started
          wait_for:
            port: '9600'
            timeout: 120
      rescue:
        - name: set /var/lib/logstash ownership
          file:
            path: '{{ item }}'
            state: directory
            owner: logstash
            group: logstash
            recurse: yes
          with_items:
            - '{{ logstash_log_path }}'
            - '{{ logstash_data_path }}'
        - service:
            name: logstash
            state: restarted
        - wait_for:
            port: '9600'
            timeout: 120

- hosts: all
  become: yes
  serial:
    - 1
    - 30%
  roles:
    - {
      role: deploy.Beats,
      target: filebeat,
      tags: filebeat
    }
    - {
      role: deploy.Beats,
      target: metricbeat,
      tags: metricbeat
    }

- hosts: all
  become: yes
  serial:
    - 1
    - 30%
  roles:
    - deploy.Monit
  post_tasks:
    - block:
        - name: waiting for service started
          wait_for:
            port: 2812
            timeout: 30
      rescue:
        - service:
            name: monit
            state: restarted
        - wait_for:
            port: 2812
            timeout: 120
